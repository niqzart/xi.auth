services:
  redis:
    image: redis:7.4.0-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  mq:
    image: rabbitmq:3.12.10-management-alpine
    volumes:
      - type: tmpfs
        target: /var/lib/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q check_port_connectivity
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  db:
    image: postgres:16.1-alpine
    environment:
      PGUSER: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
      # POSTGRES_EXTENSIONS: pg_trgm
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
      - type: bind
        source: ./init-schema.sql
        target: /docker-entrypoint-initdb.d/init-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "test", "-U", "test"]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  alembic:
    profiles:
      - migration
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./alembic
        target: /backend/alembic
      - type: bind
        source: ./alembic.ini
        target: /backend/alembic.ini
    environment:
      DB_LINK: postgresql+psycopg://test:test@db:5432/test
      DB_SCHEMA: xi_auth
    entrypoint: sh

  api:
    profiles:
      - app
    depends_on:
      redis:
        condition: service_healthy
      mq:
        condition: service_healthy
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command:
      - "--reload"
    ports:
      - "5100:8000"
    volumes:
      - ./app:/backend/app
      - ./tests:/backend/tests
    environment:
      WATCHFILES_FORCE_POLLING: true
      DB_LINK: postgresql+psycopg://test:test@db:5432/test
      REDIS_URL: redis://redis:6379
      MQ_URL: amqp://guest:guest@mq
      DB_SCHEMA: xi_auth
      # DATABASE_MIGRATED: "1"
